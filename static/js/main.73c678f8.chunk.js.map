{"version":3,"sources":["App.js","shuffle.js","serviceWorker.js","index.js"],"names":["Box","posed","div","hidden","opacity","visible","StartBtn","pressable","hoverable","init","scale","press","hover","transition","duration","NextLevelBtn","RestartBtn","Item","li","initialShuffleState","id","display","val","App","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isVisibleDots","isVisibleStartBtn","isVisibleShuffle","items","points","totalScore","playing","isVisibleNextLevelBtn","isVisibleRestartBtn","level","onClickStartBtn","bind","assertThisInitialized","onClickShuffledItem","onClickNextLevelBtn","onClickRestartBtn","_this2","boxesInterval","setInterval","setState","setTimeout","ReactDOM","findDOMNode","clearInterval","btnQuerySelector","_this3","list","map","item","j","speed","shuffleInterval","array","temporaryValue","currentIndex","length","randomIndex","Math","floor","random","shuffle","querySelector","style","prepCards","prevState","clickedItemId","event","_this4","console","log","_this5","react_default","a","createElement","className","pose","react_pose_es","key","onPressEnd","toFixed","Component","Boolean","window","location","hostname","match","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.73c678f8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport posed, { PoseGroup } from 'react-pose';\nimport ReactDOM from \"react-dom\";\nimport shuffle from './shuffle';\n\nconst Box = posed.div({\n  hidden: { opacity: 0 },\n  visible: { opacity: 1 }\n});\n\nconst StartBtn = posed.div({\n  pressable: true,\n  hoverable: true,\n  init: { scale: 1 },\n  press: { scale: 0.6 },\n  hover: { scale: 1.2 },\n  hidden: { opacity: 0 , transition: { duration: 1000 } },\n  visible: { opacity: 0.8, transition: { duration: 2000 } }\n});\n\nconst NextLevelBtn = posed.div({\n  pressable: true,\n  hoverable: true,\n  init: { scale: 1 },\n  press: { scale: 0.6 },\n  hover: { scale: 1.2 },\n  hidden: { opacity: 0 , transition: { duration: 1000 } },\n  visible: { \n    opacity: 0.7,\n    transition: { duration: 2000}\n  },\n});\n\nconst RestartBtn = posed.div({\n  pressable: true,\n  hoverable: true,\n  init: { scale: 1 },\n  press: { scale: 0.6 },\n  hover: { scale: 1.2 },\n  hidden: { opacity: 0 , transition: { duration: 1000 } },\n  visible: { \n    opacity: 0.7,\n    transition: { duration: 2000}\n  },\n});\n\n\nconst Item = posed.li({\n  hidden: { opacity: 0 , transition: { duration: 1000 } },\n  visible: { opacity: 0.8, transition: { duration: 5000 } },\n  pressable: true,\n  hoverable: true,\n  init: { scale: 1 },\n  press: { scale: 0.6 },\n  hover: { scale: 1.1 },\n});\n\nconst initialShuffleState = [\n  {id:1,display:\"x\",val:\"x\"}, {id:2,display:\"\",val:\"\"}, \n  {id:3,display:\"\",val:\"\"}, {id:4,display:\"\",val:\"\"},\n  {id:5,display:\"\",val:\"\"}, {id:6,display:\"\",val:\"\"} \n]\n\nclass App extends Component {\n\n  constructor(props, context) {\n    super(props, context)\n    this.state = { \n      isVisibleDots: true, \n      isVisibleStartBtn: false,\n      isVisibleShuffle: false,\n      items: initialShuffleState,\n      points: 6,\n      totalScore: 0,\n      playing: false,\n      isVisibleNextLevelBtn: false,\n      isVisibleRestartBtn: false,\n      level: 1,\n    };\n    this.onClickStartBtn = this.onClickStartBtn.bind(this)\n    this.onClickShuffledItem = this.onClickShuffledItem.bind(this)\n    this.onClickNextLevelBtn = this.onClickNextLevelBtn.bind(this)\n    this.onClickRestartBtn = this.onClickRestartBtn.bind(this)\n  }\n\n  componentDidMount() {\n    \n    this.boxesInterval = setInterval(() => {\n      this.setState({ isVisibleDots: !this.state.isVisibleDots });\n    }, 500);\n    setTimeout(()=> {\n      const node = ReactDOM.findDOMNode(this);\n      // node.querySelector('.boxesContainer').style.opacity = \"0\"\n      this.setState({isVisibleDots: false})\n      this.setState({isVisibleStartBtn: true})\n      clearInterval(this.boxesInterval)\n    }, 3000)\n  }\n\n  prepCards(btnQuerySelector){\n    this.setState(state => {\n      const list = state.items.map((item, j) => {\n          if (j === 0){\n            item.display = \"x\"\n            item.val = \"x\"\n          }\n          else{\n            item.display = \"\"\n            item.val = \"\"\n          }\n          return item;\n      });\n      return {\n        list\n      };\n    });\n    // console.log(this.state.items)\n    let speed = 600;\n    setTimeout(()=> {\n      this.setState(state => {\n        if(state.level === 2){\n          speed = 300;\n          state.points = 12\n        }\n        else if (state.level === 3){\n          speed = 100;\n          state.points = 18\n        }\n        const list = state.items.map((item, j) => {\n            item.display = \"?\"\n            return item;\n        });\n        return {\n          list\n        };\n      });\n    }, 3000)\n\n    setTimeout(()=> {\n      this.shuffleInterval = setInterval(() => {\n        this.setState(state => {\n          const items = shuffle(state.items)\n          return{\n            items\n          }\n        });\n      }, speed);\n    }, 5000)\n\n    setTimeout(()=> {\n      clearInterval(this.shuffleInterval)\n      this.setState({playing: true})\n    }, 7000)\n  }\n\n  onClickStartBtn(){\n    this.setState({isVisibleStartBtn:false, isVisibleShuffle:true});\n    ReactDOM.findDOMNode(this).querySelector('.level').style.opacity = \"1\"\n    const btnQuerySelector = '.startBtn'\n    this.prepCards(btnQuerySelector);\n  }\n\n  onClickNextLevelBtn(){\n    this.setState(prevState => {\n      return {\n        isVisibleNextLevelBtn:false,\n        level: prevState.level + 1\n      }\n    });\n    // console.log(this.state.items)\n    ReactDOM.findDOMNode(this).querySelector('.score').style.display = \"none\"\n    const btnQuerySelector = '.nextLevelBtn'\n    this.prepCards(btnQuerySelector);\n  }\n\n  onClickRestartBtn(){\n    this.setState(prevState => {\n      return {\n        isVisibleRestartBtn:false,\n        level: 1,\n        totalScore: 0,\n        points: 6\n      }\n    });\n    // console.log(this.state.items)\n    ReactDOM.findDOMNode(this).querySelector('.totalScore').style.display = \"none\"\n    const btnQuerySelector = '.nextLevelBtn'\n    this.prepCards(btnQuerySelector);\n  }\n  \n  onClickShuffledItem(clickedItemId, event){\n    this.setState(state => {\n      console.log(\"level: \" + state.level)\n      if (state.playing){\n        const list = state.items.map((item) => {\n            if(item.id === clickedItemId){\n              item.display = item.val\n              if (item.val === \"\"){\n                if (state.points > 1){\n                  if (state.level === 1){\n                    state.points = state.points - 1;\n                  }\n                  else if (state.level === 2){\n                    state.points = state.points - 2;\n                  }\n                  else if (state.level === 3){\n                    state.points = state.points - 3;\n                  }\n                }\n              }\n              else{\n                state.playing = false\n                ReactDOM.findDOMNode(this).querySelector('.score').style.display = \"flex\"\n                state.totalScore = state.totalScore + state.points\n                if(state.level < 3){\n                  state.isVisibleNextLevelBtn = true\n                }\n                else if(state.level === 3){\n                  ReactDOM.findDOMNode(this).querySelector('.score').style.display = \"none\"\n                  ReactDOM.findDOMNode(this).querySelector('.totalScore').style.display = \"flex\"\n                  state.isVisibleRestartBtn = true\n                }console.log(state.totalScore + \" :\" + state.points)\n              }\n            }\n            return item;\n        });\n        return {\n          list,\n        };\n      }\n    });\n    \n  }\n\n  render() {\n    const {isVisibleDots} = this.state;\n    const {isVisibleStartBtn} = this.state;\n    const {isVisibleShuffle} = this.state;\n    const {items} = this.state;\n    const {points} = this.state;\n    const {isVisibleNextLevelBtn} = this.state;\n    const {isVisibleRestartBtn} = this.state;\n    const {level} = this.state;\n    const {totalScore} = this.state;\n    \n\n    return (\n      <div className=\"App\">\n        <div className=\"boxesContainer\">\n          <Box className=\"box\" pose={isVisibleDots ? 'visible' : 'hidden'} />\n          <Box className=\"box\" pose={isVisibleDots ? 'visible' : 'hidden'} />\n          <Box className=\"box\" pose={isVisibleDots ? 'visible' : 'hidden'} />\n        </div>\n        <div className=\"shuffleWrapper\">\n          <ul className=\"ul-shuffle\">\n            <PoseGroup pose={isVisibleShuffle ? 'visible' : 'hidden'}>\n              {items.map(item => \n                <Item key={item.id} onPressEnd={this.onClickShuffledItem.bind(this, item.id)}>\n                  {item.display}\n                </Item>\n              )}\n            </PoseGroup>\n          </ul>\n        </div>\n          <StartBtn className=\"startBtn\" \n            onPressEnd={this.onClickStartBtn} \n            pose={isVisibleStartBtn ? 'visible' : 'hidden'}> Start\n          </StartBtn>\n        <NextLevelBtn className=\"nextLevelBtn\" \n          onPressEnd={this.onClickNextLevelBtn} \n          pose={isVisibleNextLevelBtn ? 'visible' : 'hidden'}> Next Level\n        </NextLevelBtn>\n        <RestartBtn className=\"restartBtn\" \n          onPressEnd={this.onClickRestartBtn} \n          pose={isVisibleRestartBtn ? 'visible' : 'hidden'}> Restart\n        </RestartBtn>\n        <div className=\"level\">Level: {level}\n        </div>\n        <div className=\"score\">Score: {points}/{6*level}\n        </div>\n        <div className=\"totalScore\">Total Score: {(totalScore/36 * 100).toFixed(2)}% </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default array => {\r\n    let currentIndex = array.length;\r\n    let temporaryValue;\r\n    let randomIndex = 0;\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n  \r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n    return array;\r\n  };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}